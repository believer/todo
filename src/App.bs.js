// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Todo from "./Todo.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function App$TodoItem(Props) {
  var todo = Props.todo;
  var onToggle = Props.onToggle;
  var tmp;
  tmp = todo.TAG === /* Complete */0 ? todo.content + " " + todo.completionDate.toISOString() : todo.content;
  return React.createElement("li", undefined, React.createElement("label", {
                  className: "items-center flex space-x-2"
                }, React.createElement("input", {
                      checked: Todo.isComplete(todo),
                      type: "checkbox",
                      onChange: onToggle
                    }), React.createElement("div", undefined, tmp)));
}

var TodoItem = {
  make: App$TodoItem
};

function App(Props) {
  var match = React.useReducer((function (state, action) {
          if (typeof action === "number") {
            return {
                    todos: Belt_Array.concat(state.todos, [[
                            new Date().getTime(),
                            {
                              TAG: /* Incomplete */1,
                              content: state.input
                            }
                          ]]),
                    input: ""
                  };
          }
          switch (action.TAG | 0) {
            case /* RemoveTodo */0 :
                var id = action._0;
                return {
                        todos: Belt_Array.keepWithIndex(state.todos, (function (param, i) {
                                return i !== id;
                              })),
                        input: state.input
                      };
            case /* ToggleTodo */1 :
                var todoId = action._0;
                return {
                        todos: Belt_Array.map(state.todos, (function (param) {
                                var todo = param[1];
                                var id = param[0];
                                if (id === todoId) {
                                  return [
                                          id,
                                          Todo.toggle(todo)
                                        ];
                                } else {
                                  return [
                                          id,
                                          todo
                                        ];
                                }
                              })),
                        input: state.input
                      };
            case /* InputChange */2 :
                return {
                        todos: state.todos,
                        input: action._0
                      };
            
          }
        }), {
        todos: [],
        input: ""
      });
  var dispatch = match[1];
  var state = match[0];
  var match$1 = state.todos.length;
  return React.createElement("div", undefined, React.createElement("label", {
                  htmlFor: "new-todo"
                }, "New todo"), React.createElement("input", {
                  id: "new-todo",
                  type: "text",
                  value: state.input,
                  onKeyPress: (function ($$event) {
                      if ($$event.key === "Enter") {
                        return Curry._1(dispatch, /* AddTodo */0);
                      }
                      
                    }),
                  onChange: (function ($$event) {
                      var value = $$event.target.value;
                      return Curry._1(dispatch, {
                                  TAG: /* InputChange */2,
                                  _0: value
                                });
                    })
                }), match$1 !== 0 ? React.createElement("ul", undefined, Belt_Array.map(state.todos, (function (param) {
                          var id = param[0];
                          return React.createElement(App$TodoItem, {
                                      todo: param[1],
                                      onToggle: (function (param) {
                                          return Curry._1(dispatch, {
                                                      TAG: /* ToggleTodo */1,
                                                      _0: id
                                                    });
                                        }),
                                      key: String(id)
                                    });
                        }))) : "You don't have any todos");
}

var make = App;

export {
  TodoItem ,
  make ,
  
}
/* react Not a pure module */
