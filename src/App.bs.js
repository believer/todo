// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Todo from "./Todo.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as AddTodo from "./AddTodo.bs.js";
import * as TodoItem from "./TodoItem.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function App(Props) {
  var match = React.useReducer((function (state, action) {
          if (typeof action === "number") {
            if (action === /* AddTodo */0) {
              return {
                      todos: Belt_Array.concat(state.todos, [[
                              String(new Date().getTime()),
                              {
                                TAG: /* Incomplete */1,
                                content: state.input
                              }
                            ]]),
                      input: ""
                    };
            } else {
              return {
                      todos: Belt_Array.keep(state.todos, (function (param) {
                              return !Todo.isComplete(param[1]);
                            })),
                      input: state.input
                    };
            }
          }
          switch (action.TAG | 0) {
            case /* RemoveTodo */0 :
                var id = action._0;
                return {
                        todos: Belt_Array.keep(state.todos, (function (param) {
                                return param[0] !== id;
                              })),
                        input: state.input
                      };
            case /* ToggleTodo */1 :
                var todoId = action._0;
                return {
                        todos: Belt_Array.map(state.todos, (function (param) {
                                var todo = param[1];
                                var id = param[0];
                                if (id === todoId) {
                                  return [
                                          id,
                                          Todo.toggle(todo)
                                        ];
                                } else {
                                  return [
                                          id,
                                          todo
                                        ];
                                }
                              })),
                        input: state.input
                      };
            case /* InputChange */2 :
                return {
                        todos: state.todos,
                        input: action._0
                      };
            
          }
        }), {
        todos: [],
        input: ""
      });
  var dispatch = match[1];
  var state = match[0];
  var incompleteTasks = Belt_Array.keep(state.todos, (function (param) {
          return !Todo.isComplete(param[1]);
        }));
  var completedTasks = Belt_Array.keep(state.todos, (function (param) {
          return Todo.isComplete(param[1]);
        }));
  var match$1 = incompleteTasks.length;
  var match$2 = completedTasks.length;
  return React.createElement("div", undefined, React.createElement("h1", undefined, "Tasks"), React.createElement("h2", undefined, "TODO"), React.createElement(AddTodo.make, {
                  label: "New todo",
                  id: "new-todo",
                  value: state.input,
                  onKeyPress: (function ($$event) {
                      if ($$event.key === "Enter") {
                        return Curry._1(dispatch, /* AddTodo */0);
                      }
                      
                    }),
                  onChange: (function ($$event) {
                      var value = $$event.target.value;
                      return Curry._1(dispatch, {
                                  TAG: /* InputChange */2,
                                  _0: value
                                });
                    })
                }), match$1 !== 0 ? React.createElement("ul", undefined, Belt_Array.map(incompleteTasks, (function (param) {
                          var id = param[0];
                          return React.createElement(TodoItem.make, {
                                      todo: param[1],
                                      onToggle: (function (param) {
                                          return Curry._1(dispatch, {
                                                      TAG: /* ToggleTodo */1,
                                                      _0: id
                                                    });
                                        }),
                                      onRemove: (function (param) {
                                          return Curry._1(dispatch, {
                                                      TAG: /* RemoveTodo */0,
                                                      _0: id
                                                    });
                                        }),
                                      key: id
                                    });
                        }))) : "You don't have any todos", match$2 !== 0 ? React.createElement(React.Fragment, undefined, React.createElement("h2", undefined, "Done"), React.createElement("ul", undefined, Belt_Array.map(completedTasks, (function (param) {
                              var id = param[0];
                              return React.createElement(TodoItem.make, {
                                          todo: param[1],
                                          onToggle: (function (param) {
                                              return Curry._1(dispatch, {
                                                          TAG: /* ToggleTodo */1,
                                                          _0: id
                                                        });
                                            }),
                                          onRemove: (function (param) {
                                              return Curry._1(dispatch, {
                                                          TAG: /* RemoveTodo */0,
                                                          _0: id
                                                        });
                                            }),
                                          key: id
                                        });
                            }))), React.createElement("button", {
                        onClick: (function (param) {
                            return Curry._1(dispatch, /* ArchiveTodos */1);
                          })
                      }, "Archive todos")) : null);
}

var make = App;

export {
  make ,
  
}
/* react Not a pure module */
